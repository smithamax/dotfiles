# Create a new directory and enter it
function md() {
	mkdir -p "$@" && cd "$@"
}

function mkproj() {
	mkdir $1 && cd $1 && git init
}

# find shorthand
function f() {
	find . -name "$1"
}

# Use Git’s colored diff when available
hash git &>/dev/null
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@"
	}
fi

# Create a data URL from a file
function dataurl() {
	local mimeType=$(file -b --mime-type "$1")
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8"
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')"
}

# lets toss an image onto my server and pbcopy that bitch.
# function scpp() {
# 	scp "$1" aurgasm@aurgasm.us:~/paulirish.com/i;
# 	echo "http://paulirish.com/i/$1" | pbcopy;
# 	echo "Copied to clipboard: http://paulirish.com/i/$1"
# }

function wiki()
{
	dig +short txt $1.wp.dg.cx
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
	local port="${1:-8000}"
	open "http://localhost:${port}/"
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

function sshhome() {
	local ip="$(curl -s find.slurm.info)"
	ssh "dom@${ip}" "$@"
}


# All the dig info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

function notify() {
	curl -s \
		-F "token=$PUSHOVER_TOKEN" \
		-F "user=$PUSHOVER_USER" \
		-F "message=$1" \
		https://api.pushover.net/1/messages
}

function pull() {
	if [[ $1 == 'music' ]]; then
		local dest="$HOME/Music"
		local src="/Volumes/Music"
		if [[ ! -d ${src} ]]; then
			ping -c1 lurr &> /dev/null
			if [[ ! $? -eq 0 ]]; then
				local ip="$(curl -s find.slurm.info)"
				local src="dom@${ip}:/srv/music"
			else
				local src="dom@lurr:/srv/music"
			fi
		fi
	fi
	rsync -avP --human-readable ${src} ${dest}
}
complete -W "music" -o nospace pull

function throw() {
	rsync -avP --human-readable --remove-source-files $@
}

function ssid() {
	/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}'
}

# Escape UTF-8 characters into their 3-byte format
# function escape() {
# 	printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)
# 	echo # newline
# }

# Decode \x{ABCD}-style Unicode escape sequences
# function unidecode() {
# 	perl -e "binmode(STDOUT, ':utf8'); print \"$@\""
# 	echo # newline
# }